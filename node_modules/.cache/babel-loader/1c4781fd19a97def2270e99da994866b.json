{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\ReactModal\\\\src\\\\components\\\\role\\\\Role.js\";\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Container = styled.div`\n  ${{\n  \"justifyContent\": \"center\",\n  \"marginTop\": \"auto\",\n  \"marginBottom\": \"auto\",\n  \"display\": \"flex\"\n}}\n`;\n_c = Container;\nexport const SelectContainer = styled.select`\n  select::-ms-expand {\n    display: none;\n  }\n  ${{\n  \"width\": \"100%\",\n  \"borderWidth\": \"2px\",\n  \"--tw-border-opacity\": \"1\",\n  \"borderColor\": \"rgba(209, 213, 219, var(--tw-border-opacity))\",\n  \"paddingTop\": \"0.25rem\",\n  \"paddingBottom\": \"0.25rem\",\n  \"textAlign\": \"center\",\n  \"borderRadius\": \"0.25rem\",\n  \"backgroundColor\": \"rgba(0, 0, 0, 0)\"\n}}\n`;\n_c2 = SelectContainer;\nexport const OptionContainer = styled.option`\n  ${{\n  \"textTransform\": \"capitalize\",\n  \"--tw-text-opacity\": \"1\",\n  \"color\": \"rgba(0, 0, 0, var(--tw-text-opacity))\"\n}}\n`;\n_c3 = OptionContainer;\nexport const Text = styled.text`\n  ${{\n  \"width\": \"auto\",\n  \"fontSize\": \"1rem\",\n  \"lineHeight\": \"1.5rem\",\n  \"textAlign\": \"center\",\n  \"textTransform\": \"capitalize\"\n}}\n`;\n_c4 = Text;\n\nconst Role = _ref => {\n  let {\n    roleArr,\n    isCustom,\n    role\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: isCustom ? /*#__PURE__*/_jsxDEV(SelectContainer, {\n      children: roleArr.map(role => /*#__PURE__*/_jsxDEV(OptionContainer, {\n        value: role,\n        children: role\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Text, {\n      children: role\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c5 = Role;\nRole.propTypes = {\n  roleArr: PropTypes.arrayOf(PropTypes.string).isRequired,\n  isCustom: PropTypes.bool.isRequired,\n  role: PropTypes.string\n};\nexport default Role;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SelectContainer\");\n$RefreshReg$(_c3, \"OptionContainer\");\n$RefreshReg$(_c4, \"Text\");\n$RefreshReg$(_c5, \"Role\");","map":{"version":3,"sources":["C:/Users/user/ReactModal/src/components/role/Role.js"],"names":["PropTypes","styled","Container","div","SelectContainer","select","OptionContainer","option","Text","text","Role","roleArr","isCustom","role","map","propTypes","arrayOf","string","isRequired","bool"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,OAAO,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AACpC,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA,CAIJ;AACF,CANO;KAAMD,S;AAOb,OAAO,MAAME,eAAe,GAAGH,MAAM,CAACI,MAAO;AAC7C;AACA;AACA;AACA,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAQJ;AACF,CAbO;MAAMD,e;AAcb,OAAO,MAAME,eAAe,GAAGL,MAAM,CAACM,MAAO;AAC7C,IAAM;AAAA;AAAA;AAAA;AAAA,CAGJ;AACF,CALO;MAAMD,e;AAMb,OAAO,MAAME,IAAI,GAAGP,MAAM,CAACQ,IAAK;AAChC,IAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAKJ;AACF,CAPO;MAAMD,I;;AAQb,MAAME,IAAI,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,QAAX;AAAqBC,IAAAA;AAArB,GAAgC;AAC5C,sBACE,QAAC,SAAD;AAAA,cACGD,QAAQ,gBACP,QAAC,eAAD;AAAA,gBACGD,OAAO,CAACG,GAAR,CAAaD,IAAD,iBACX,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEA,IAAxB;AAAA,kBAA+BA;AAA/B;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADO,gBAOP,QAAC,IAAD;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAdD;;MAAMH,I;AAgBNA,IAAI,CAACK,SAAL,GAAiB;AACfJ,EAAAA,OAAO,EAAEX,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,MAA5B,EAAoCC,UAD9B;AAEfN,EAAAA,QAAQ,EAAEZ,SAAS,CAACmB,IAAV,CAAeD,UAFV;AAGfL,EAAAA,IAAI,EAAEb,SAAS,CAACiB;AAHD,CAAjB;AAKA,eAAeP,IAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport tw from 'twin.macro';\r\n\r\nexport const Container = styled.div`\r\n  ${tw`\r\n  justify-center\r\n  my-auto\r\n  flex\r\n`}\r\n`;\r\nexport const SelectContainer = styled.select`\r\n  select::-ms-expand {\r\n    display: none;\r\n  }\r\n  ${tw`\r\nw-full\r\nborder-2\r\nborder-gray-300\r\npy-1\r\ntext-center\r\nrounded\r\nbg-transparent\r\n`}\r\n`;\r\nexport const OptionContainer = styled.option`\r\n  ${tw`\r\ncapitalize\r\ntext-black\r\n`}\r\n`;\r\nexport const Text = styled.text`\r\n  ${tw`\r\nw-auto\r\ntext-base\r\ntext-center\r\ncapitalize\r\n`}\r\n`;\r\nconst Role = ({ roleArr, isCustom, role }) => {\r\n  return (\r\n    <Container>\r\n      {isCustom ? (\r\n        <SelectContainer>\r\n          {roleArr.map((role) => (\r\n            <OptionContainer value={role}>{role}</OptionContainer>\r\n          ))}\r\n        </SelectContainer>\r\n      ) : (\r\n        <Text>{role}</Text>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nRole.propTypes = {\r\n  roleArr: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  isCustom: PropTypes.bool.isRequired,\r\n  role: PropTypes.string,\r\n};\r\nexport default Role;\r\n"]},"metadata":{},"sourceType":"module"}